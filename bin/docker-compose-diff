#!/usr/bin/env python3

from subprocess import check_output, check_call, call
from tempfile import NamedTemporaryFile
import yaml


# # How this works:
# read docker-compose.yml
# for each service:
#   spin up a fresh docker container
#   for each volume:
#     copy files out of docker container to /tmp
#     diff copied files against external files
#     delete copied files
#   delete container

def main():
  with open('docker-compose.yml', 'r') as f:
    compose = yaml.load(f.read())
  for service_id, service in compose.items():
    print('service: ' + service_id)
    image = service['image']
    container = check_output(['docker', 'create', image]).decode('utf8').strip()
    print('created container ' + container)
    check_call(['docker', 'start', container])
    print('started container')

    if 'volumes' in service:
      for v in service['volumes']:
        external_name, internal_name = v.split(':')
        print('volume: ' + internal_name)
        with NamedTemporaryFile() as tmpfile:
          check_call(['docker', 'cp', container + ':' + internal_name, tmpfile.name])
          diff(internal_name, tmpfile.name, external_name)

    print('stopping container')
    check_call(['docker', 'stop', container])
    print('removing container')
    check_call(['docker', 'rm', container])


def diff(original, modified, output):
  print('diffing ' + original + ' and ' + modified)
  # mkdir $(dirname output)
  # diff $original $modified > $output
  call(['diff', '-u', a, b])


if __name__ == '__main__':
  main()
